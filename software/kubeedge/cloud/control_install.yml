---
- hosts: cloudcontroller
  become: true
  tasks:
    - name: Ensure docker service is running
      systemd:
        name: docker
        state: started

    - name: Add cloud user to docker group
      user:
        name: "{{ username }}"
        groups: docker
        append: true

    - name: Restart docker service
      command: systemctl restart docker

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ cloud_ip }}
        create: true

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: true
        state: restarted

    - name: Initialize the Kubernetes cluster using kubeadm
      command: >
        kubeadm init
          --apiserver-advertise-address={{ cloud_ip }}
          --apiserver-cert-extra-sans={{ cloud_ip }}
          --node-name {{ ansible_hostname }}
          --pod-network-cidr=192.168.0.0/16

    - name: Set KUBECONFIG variable globally
      shell: echo "export KUBECONFIG=/home/{{ username }}/.kube/config" >> /etc/environment

    - name: Create user Kubernetes directory
      file:
        path: /home/{{ username }}/.kube
        state: directory

    - name: Copy Kubernetes files to user
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ username }}/.kube/config
        owner: "{{ username }}"
        group: "{{ username }}"
        remote_src: true

    - name: Link KubeEdge to Kubernetes
      command: ln -s "/home/{{ username }}/.kube" /root
      args:
        warn: false

    # Ansible SSH's into the VM, executes a command and then kills the session.
    # This doesn't always work with KubeEdge, so we nohup KubeEdge and then wait for it to finish.
    - name: Initialize KubeEdge and get the token for edge nodes to join
      shell: |
        nohup keadm init --kube-config="/home/{{ username }}/.kube/config" \
          --advertise-address={{ cloud_ip }} --kubeedge-version=1.8.1
        sleep 30
        keadm gettoken --kube-config="/home/{{ username }}/.kube/config" > /tmp/join-command.txt

    - name: Copy join command to local file
      fetch:
        src: /tmp/join-command.txt
        dest: "{{ continuum_home }}/"
        flat: true

    - name: Remove unneeded KubeEdge join command file
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /tmp/join-command.txt

    - name: Reset KubeEdge
      command: >
        nohup keadm init --kube-config="/home/{{ username }}/.kube/config"
        --advertise-address={{ cloud_ip }} --kubeedge-version=1.8.1

  handlers:
    - name: docker status
      service: name=docker state=started
